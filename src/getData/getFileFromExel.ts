import { BooleanType } from "./../shared/constans";
import { CellItemModel } from "./../model/cellModel";
const dataList = [
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "customer_uuid",
    DATA_TYPE: "uuid",
    UNBOUND_FIELD: "",
    UNBOUND_DISPLAY: "",
    LOOKUP_TABLE_NAME: "",
    LOOKUP_CONTROL: "",
    READONLY: "",
    READONLY_ON_CREATE: "",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: null,
    CONTROL_TYPE: "",
    TABLE_LABEL: "",
    COLUMN_LABEL: "",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: null,
    MANDATORY: "",
    GROUP_NAME: "",
    GROUP_ORDERING: null,
    COLUMN_ORDERING: null,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "customer_code",
    DATA_TYPE: "character varying (500)",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: 1,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Textbox",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Customer code",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: 1,
    MANDATORY: "Yes",
    GROUP_NAME: "General",
    GROUP_ORDERING: 1,
    COLUMN_ORDERING: 1,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "customer_branch_uuid",
    DATA_TYPE: "uuid",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "customer_branch_table",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Dropdown",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Customer branch ",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: null,
    MANDATORY: "No",
    GROUP_NAME: "infomation",
    GROUP_ORDERING: 2,
    COLUMN_ORDERING: 1,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "customer_category_uuid",
    DATA_TYPE: "uuid",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "customer_category_table",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Dropdown",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Customer category ID",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: null,
    MANDATORY: "No",
    GROUP_NAME: "infomation",
    GROUP_ORDERING: 2,
    COLUMN_ORDERING: 2,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "customer_name",
    DATA_TYPE: "character varying (500)",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: 2,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Textbox",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Customer name",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: 2,
    MANDATORY: "No",
    GROUP_NAME: "General",
    GROUP_ORDERING: 1,
    COLUMN_ORDERING: 2,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "address_uuid",
    DATA_TYPE: "uuid",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "address_table",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Dropdown",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Customer addrees",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: 3,
    MANDATORY: "No",
    GROUP_NAME: "General",
    GROUP_ORDERING: 1,
    COLUMN_ORDERING: 3,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "credit_term",
    DATA_TYPE: "integer",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Textbox",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Credit term",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: null,
    MANDATORY: "No",
    GROUP_NAME: "infomation",
    GROUP_ORDERING: 2,
    COLUMN_ORDERING: 3,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "description",
    DATA_TYPE: "character varying (500)",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: 50,
    CONTROL_TYPE: "Text",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Description",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: null,
    MANDATORY: "No",
    GROUP_NAME: "General",
    GROUP_ORDERING: 1,
    COLUMN_ORDERING: 5,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "tax_uuid",
    DATA_TYPE: "uuid",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "tax_table",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Dropdown",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Tax ID",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: 4,
    MANDATORY: "No",
    GROUP_NAME: "infomation",
    GROUP_ORDERING: 2,
    COLUMN_ORDERING: 4,
  },
  {
    TABLE_NAME: "customer_table",
    COLUMN_NAME: "bank_uuid",
    DATA_TYPE: "uuid",
    UNBOUND_FIELD: "No",
    UNBOUND_DISPLAY: "No",
    LOOKUP_TABLE_NAME: "bank_table",
    LOOKUP_CONTROL: "",
    READONLY: "No",
    READONLY_ON_CREATE: "No",
    LOOKUP_ORDERING: null,
    CONTROL_SIZE: 25,
    CONTROL_TYPE: "Dropdown",
    TABLE_LABEL: "Customer",
    COLUMN_LABEL: "Bank",
    CREATE: "",
    DELETE: "",
    UPDATE: "",
    LIST_VIEW_ORDERING: 5,
    MANDATORY: "No",
    GROUP_NAME: "General",
    GROUP_ORDERING: 1,
    COLUMN_ORDERING: 4,
  },
];
export const getFileFromExcel = async (rows: any): Promise<CellItemModel[]> => {
  let newDataList: CellItemModel[] = [];
  dataList.forEach((item) => {
    let model: CellItemModel = new CellItemModel();
    model.columnLabel = item.COLUMN_LABEL;
    model.tableName = item.TABLE_NAME;
    model.columnName = item.COLUMN_NAME;
    model.dataType = item.DATA_TYPE;
    model.unboundField = item.UNBOUND_FIELD == BooleanType.YES ? true : false;
    model.unboundDisplay =
      item.UNBOUND_DISPLAY == BooleanType.YES ? true : false;
    model.lookupTableName = item.LOOKUP_TABLE_NAME;
    model.lookupControl = item.LOOKUP_CONTROL;
    model.readonly = item.READONLY == BooleanType.YES ? true : false;
    model.readonlyOnCreate =
      item.READONLY_ON_CREATE == BooleanType.YES ? true : false;
    model.lookupOrdering = item.LOOKUP_ORDERING;
    model.controlSize = item.CONTROL_SIZE;
    model.controlType = item.CONTROL_TYPE;
    model.tableLabel = item.TABLE_LABEL;
    model.columnLabel = item.COLUMN_LABEL;
    model.create = item.CREATE == BooleanType.YES ? true : false;
    model.delete = item.DELETE == BooleanType.YES ? true : false;
    model.update = item.UPDATE == BooleanType.YES ? true : false;
    model.listViewOrdering = item.LIST_VIEW_ORDERING;
    model.mandatory = item.MANDATORY == BooleanType.YES ? true : false;
    model.groupName = item.GROUP_NAME;
    model.groupOrdering = item.GROUP_ORDERING;
    model.columnOrdering = item.COLUMN_ORDERING;
    newDataList.push(model);
  });
  return newDataList;
};
