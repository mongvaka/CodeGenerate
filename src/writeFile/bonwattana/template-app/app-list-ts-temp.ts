import { CellItemModel } from "../../../model/cellModel";
import { BaseBoonwattanaClass } from "../base/base-boonwattana-class";
export class AppListTsTemp extends BaseBoonwattanaClass {
  private masterList: CellItemModel[];
  private t: string[];
  constructor(masterList: CellItemModel[]) {
    super(masterList);
    this.masterList = masterList;
    this.t = [];
  }
  getTemplate() {
    this.initialDataItemPage();
    return this.t;
  }
  private initialDataItemPage() {
    this.t.push(`import { Component } from '@angular/core';`);
    this.t.push(`import { ActivatedRoute, Router } from '@angular/router';`);
    this.t.push(`import { BaseListComponent } from 'src/app/shared/component/base-list/base-list.component';`);
    this.t.push(`import { Operators } from 'src/app/shared/constants/constanst';`);
    this.t.push(`import { ColumnType, InputType, SortType } from 'src/app/shared/constants/enum-system';`);
    this.t.push(`import { BaseListInterface } from 'src/app/shared/interface/base-list-interface';`);
    this.t.push(`import { ColumnModel, OptionModel, RowIdentity, SelectItems } from 'src/app/shared/models/miscellaneous';`);
    this.t.push(`import { SearchCondition, SearchParameter } from 'src/app/shared/models/search-param-model';`);
    this.t.push(`import { DemoListModel } from '../demo-model';`);
    this.t.push(`import { DemoService } from '../demo.service';`);
    this.t.push(`@Component({`);
    this.t.push(`  selector: 'demo-list',`);
    this.t.push(`  templateUrl: './demo-list.component.html',`);
    this.t.push(`  styleUrls: ['./demo-list.component.scss']`);
    this.t.push(`})`);
    this.t.push(`export class DemoListComponent extends BaseListComponent<DemoListModel> implements BaseListInterface {`);
    this.t.push(`  tableName:string ='demo'`);
    this.t.push(`  moduleName:string = 'MODULE.DEMO'`);
    this.t.push(`  lastRemoveId:number = undefined;`);
    this.t.push(`  demoEnumOption:SelectItems[] = []`);
    this.t.push(`  gendarOption:SelectItems[] = []`);
    this.t.push(`  constructor(private service: DemoService,`);
    this.t.push(`     router:Router,route:ActivatedRoute`);
    this.t.push(`    ) {`);
    this.t.push(`    super(router,route);`);
    this.t.push(`  }`);
    this.t.push(`  setSerachCondtion(): void {`);
    this.t.push(`    const searchConditions:SearchCondition[] = [`);
    this.t.push(`      {`);
    this.t.push(`          tableName:'demo',`);
    this.t.push(`          feildName:'demoEmail',`);
    this.t.push(`          label:'LABEL.DEMO_EMAIL',`);
    this.t.push(`          inputType:InputType.STRING,`);
    this.t.push(`          operator:Operators.LIKE`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        tableName:'demo',`);
    this.t.push(`        feildName:'demoNumber',`);
    this.t.push(`        label:'LABEL.DEMO_NUMBER',`);
    this.t.push(`        inputType:InputType.NUMBER,`);
    this.t.push(`        operator:Operators.EQUAL`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        tableName:'demo',`);
    this.t.push(`        feildName:'demoDate',`);
    this.t.push(`        label:'LABEL.DEMO_DATE',`);
    this.t.push(`        inputType:InputType.DATE,`);
    this.t.push(`        operator:Operators.EQUAL`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        tableName:'demo',`);
    this.t.push(`        feildName:'demoEnum',`);
    this.t.push(`        label:'LABEL.DEMO_ENUM',`);
    this.t.push(`        inputType:InputType.ENUM,`);
    this.t.push(`        operator:Operators.EQUAL,`);
    this.t.push(`        options:this.demoEnumOption,`);
    this.t.push(`      }`);
    this.t.push(`    ]`);
    this.t.push(`    this.searchConditions = searchConditions;`);
    this.t.push(`  }`);
    this.t.push(`  ngOnInit(): void {`);
    this.t.push(`    this.onEnumLoader()`);
    this.t.push(`    this.setSerachCondtion()`);
    this.t.push(`    this.setDataGridOption()`);
    this.t.push(`  }`);
    this.t.push(`  onSearch(searchParameter: SearchParameter): void {        `);
    this.t.push(`    this.service.getList(searchParameter).subscribe(result=>{      `);
    this.t.push(`      this.searchResult = result`);
    this.t.push(`    })`);
    this.t.push(`  }`);
    this.t.push(`  ngAfterViewInit(): void {`);
    this.t.push(`  }`);
    this.t.push(`  ngOnDestroy(): void {`);
    this.t.push(`  }`);
    this.t.push(`  onEnumLoader(): void {`);
    this.t.push(`    this.demoEnumOption = this.dropdownService.getGendarDropDown()`);
    this.t.push(`    this.gendarOption = this.dropdownService.getGendarDropDown()`);
    this.t.push(`  }`);
    this.t.push(`  setDataGridOption(): void {`);
    this.t.push(`    this.option = new OptionModel();`);
    this.t.push(`    this.option.canCreate = true;`);
    this.t.push(`    this.option.canView = true;`);
    this.t.push(`    this.option.canDelete = true;`);
    this.t.push(`    const columns: ColumnModel[] = [`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_EMAIL',`);
    this.t.push(`        textKey: 'demoEmail',`);
    this.t.push(`        type: ColumnType.STRING,`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_NUMBER',`);
    this.t.push(`        textKey: 'demoNumber',`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        type: ColumnType.DECIMAL_2,`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_DATE',`);
    this.t.push(`        textKey: 'demoDate',`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        type: ColumnType.DATE,`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_ENUM',`);
    this.t.push(`        textKey: 'demoEnum',`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        type: ColumnType.ENUM,`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`        enumOption: this.gendarOption`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_ENUM',`);
    this.t.push(`        textKey: 'demoEnum',`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        type: ColumnType.ENUM,`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`        enumOption: this.gendarOption`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_ENUM',`);
    this.t.push(`        textKey: 'demoEnum',`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        type: ColumnType.ENUM,`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`        enumOption: this.gendarOption`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_ENUM',`);
    this.t.push(`        textKey: 'demoEnum',`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        type: ColumnType.ENUM,`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`        enumOption: this.gendarOption`);
    this.t.push(`      },`);
    this.t.push(`      {`);
    this.t.push(`        label: 'LABEL.DEMO_ENUM',`);
    this.t.push(`        textKey: 'demoEnum',`);
    this.t.push(`        tableName: 'demo',`);
    this.t.push(`        type: ColumnType.ENUM,`);
    this.t.push(`        visibility: true,`);
    this.t.push(`        sorting: SortType.NONE,`);
    this.t.push(`        enumOption: this.gendarOption`);
    this.t.push(`      }`);
    this.t.push(`    ];`);
    this.t.push(`    this.option.columns = columns;`);
    this.t.push(`  }`);
    this.t.push(`  onCreate(): void {`);
    this.t.push(`    this.toItemPage(0,false)`);
    this.t.push(`  }`);
    this.t.push(`  onView(row: RowIdentity): void {`);
    this.t.push(`    this.toItemPage(row.id,true)`);
    this.t.push(`  }`);
    this.t.push(`  onEdit(row: RowIdentity):void{`);
    this.t.push(`    this.toItemPage(row.id,false)`);
    this.t.push(`  }`);
    this.t.push(`  onDelete(row: RowIdentity): void {`);
    this.t.push(`    this.service.delete(row.id).subscribe(result=>{`);
    this.t.push(`      this.lastRemoveId = result.id`);
    this.t.push(`    })`);
    this.t.push(`  }`);
    this.t.push(`  toItemPage(id:number,isView:boolean){`);
    this.t.push(`    this.toItem('demo',id,isView)`);
    this.t.push(`  }`);
    this.t.push(`}`);
  }
}
